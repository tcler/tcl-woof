# THIS FILE CONTAINS Woof! DEFAULT SETTINGS. 
# DO NOT EDIT DIRECTLY AS UPGRADES WILL OVERWRITE YOUR VALUES.
# To modify a setting, edit the application.cfg file instead which
# will override the settings from this file.

# Where the application has its URL root
init url_root /

# Application internal and display names. You should always override these.
init app_name "woof"
init app_display_name "Woof!"

# Default controller and action if not specified in request URL.
# You should also set url_root in the application.cfg file.
# Note this is only used for default URL dispatching when no defined
# route matches. The path is a relative path from the URL root and must
# begin with a /
init app_default_uri_path /_woof/manage/welcome

# Where the application resides under the woof root. Normally "app" (default)
# but can be set to "test" or whatever else
init app_dir app

# The language id for the language that the top level view files are
# written in.
init app_default_language en

# run_mode - development, or production
# init run_mode production
init run_mode development

# Controls whether scripts are reloaded for every request
init reload_scripts [expr {($run_mode eq "development") ? "true" : "false"}]

# Controls whether templates are reloaded for every request
init reload_templates [expr {($run_mode eq "development") ? "true" : "false"}]

# Dictionary of template processors. Each element pair consists of the
# file extension and the corresponding template processing command.
# File extensions are tried in the order listed. Must be specified
# in lower case. You may add template processors in any order but
# note that if you remove the entry for .wtf, the default layout and
# any other WTF based templates will not work.
init template_processors {
    .wtf  ::woof::wtf
}

# loglevel - debug, info, notice, warn, err, crit, alert, emerg
init log_level [expr {($run_mode eq "development") ? "debug" : "info"}]

# Directory and file name for log files.
# This may or may not be used depending on the
# web server interface in use.
init log_dir temp
init log_file woof.log

# Controls whether error stacks are displayed in the browser
init expose_error_detail [expr {($run_mode eq "development") ? "true" : "false"}]

# List of directories that can be read by application in addition to standard
# directories. If you are loading any extra packages their directories (or
# a parent) must be listed here
# Example: init lib_dirs [list /usr/lib/tcl /usr/local/lib/tcl]
init lib_dirs [list ]

# Path to the route definition file
init route_file config/routes.cfg

# Session key name. If hosting multiple Woof! installations on a single
# system, may need to change the session identifier cookie name.
init session_key_name "woofsid"

