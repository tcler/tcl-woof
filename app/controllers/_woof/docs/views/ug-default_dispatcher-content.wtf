<p>By default, Woof! will use the following algorithm to map a URL to a
  controller and action.
</p>

<ul>
  <li>Remove the URL root prefix (corresponding to the value of
    <code>url_root</code> in the
    [my _chapter_link configuration "configuration file"]) from the
    presented URL.</li>
  <li>Remove the query and fragment components if any from the
  URL.</li>
  <li>If the remaining fragment is empty, set it to the value of
    the configuration variable <code>app_default_uri_path</code> (which may
    also be empty).
  <li>Split the string on the <code>/</code> character to get a
    list of tokens.</li>
  <li>If the list has two or more tokens, the last token is the name
    of the action, and the penultimate token is the name of the
    controller. Any preceding tokens specify the module.</li>
  <li>If the list has exactly one token, it is the name of the controller.
    The action is the value of the configuration variable
    <code>app_default_action</code> if defined, or <code>index</code>
    otherwise. The module list is empty.</li>  
  <li>If the list is empty, the controller is the value of the
    configuration variable <code>app_default_controller</code> if
    defined or the configuration variable <code>app_name</code> if it
    is not. The action is the value of the configuration variable
    <code>app_default_action</code> if defined, or <code>index</code>
    if not. The module list is empty.</li>
</ul>    
    
<p>For example, if the application is rooted at
  <span class="wf_filename">/myapp</span>, the URL
  <span class="wf_filename">/myapp/alpha/beta/gamma/delta</span>, will
  be mapped to the action <code>delta</code> in the controller
  <code>gamma</code> in the module <code>{alpha beta}</code>. The
  controller class will be <code>GammaController</code> and be loaded
  from the file
  <span class="wf_filename">app/controllers/alpha/beta/gamma_controller.tcl</span>
  in the Woof! directory.
</p>

<p><em>Note this default URL mapping is used only if no custom route
    matches the URL as described in the next section.</em></p>
