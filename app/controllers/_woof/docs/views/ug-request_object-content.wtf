<p>On receiving a client request, Woof! creates
the <span class='ug-code'>request</span> object, of class
[my _manpage_link ::woof::Request],
that encapsulates various attributes and data in the request. The
following objects are contained
in <span class='ug-code'>request</span>.</p>

<h4><span class='ug-code'>params</span></h4>

<p>Parameters passed in the client request are accessible through
the [my _chapter_link params_object "<span class='ug-code'>params</span>"]
object. This is also directly accessible from the
[my _chapter_link controller_object "<span class='ug-code'>controller</span>"]
object context.</p>

<h4><span class='ug-code'>icookies</span></h4>

<p>Any HTTP cookies sent in the client request can be retrieved through the
[my _chapter_link icookies_object "<span class='ug-code'>cookies</span>"]
object. This can also be accessed in a 
[my _chapter_link controller_object "<span class='ug-code'>controller</span>"]
context as <span class='ug-code'>icookies</span> (to distinguish them
from outgoing cookies <span class='ug-code'>ocookies</span>.</p>

<h4><span class='ug-code'>env</span></h4>

<p>The [my _chapter_link env_object "<span class='ug-code'>env</span>"]
object stores the environment passed in by the Web server. Generally,
applications should use the methods of the
[my _chapter_link request_object "<span class='ug-code'>request</span>"]
object that hide web server differences rather than directly accessing
this. This can also be accessed from
[my _chapter_link controller_object "<span class='ug-code'>controller</span>"]
context.</p>

<p>The <span class='ug-code'>request</span> object also has several
helper methods to retrieve information about the request, such as the
URL, port etc. in a web server independent manner. Refer to
the [my _manpage_link ::woof::Request "API documentation"] for details.</p>
