<p>A <strong>Woof! Template Format</strong> (WTF) file is a file
containing a combination of plain text and Tcl code that is processed
to product the final text output. In the context of web servers, the
text is generally HTML format text but does not have to be. Both
layouts and page sections are normally generated from WTF files.</p>

<p>In its simplest form, a WTF fragment contains text with no
characters that are special to Tcl. The output of the template
processor is exactly the same as the fragment. For example,</p>

[my _code_sample {
<p>This is a paragraph.</p>
}]

<p>will be passed through by the WTF processor without any changes.</p>

<p>Dynamic content can be generated by including Tcl commands and
variable references.</p>

[my _code_sample {
<p>Today's date is [clock format [clock seconds] -format %D]</p>
}]

<p>In this WTF fragment, the text between
the <span class='wf_code'>[]</span> characters is evaluated as Tcl
code and replaced by the result of the evaluation in effect printing
the current date. The exact syntax and semantics of processing is
defined by Tcl's subst command which is in fact used as the basic
engine in template processing.</p>

<p>In addition, lines beginning with the % character are treated
entirely as Tcl code but the resulting values are not inserted into
the template output. This is most useful for control structures or
short intermediate calculations. For example, the following
fragment</p>

[my _code_sample {
  <table>
  % for {set i 1} {$i < 6} {incr i} {
    <tr><td>$i</td></tr>
  % }
</table>
}]

<p>will generate a HTML table of integers from 1 to 5.</p>

<p>You can also use the <code>%(</code> and <code>%)</code> block
delimiters to enclose a block of Tcl code. For example, the lines
[my _code_sample {
  % # Initialize variables
  % set i 1
  % set j 2
  % set k 3
}]

<p>can also be written as</p>
[my _code_sample {
  %(
  # Initialize variables
  set i 1
  set j 2
  set k 3
  %)
}]

<h3>Template context</h3>

<p>The processing of WTF fragments is implemented by the
command <span class='wf_code'>html_frag</span><sup>1</sup> in the
context of the caller. In the case of Woof!, this context is the
controller object handling the request. Therefore all commands and
variables defined in the context of that controller's methods are
available in the template with appropriate declarations. In particular,
  note that <code>my variable</code> statements are required in the
template file to bring the controller object member variables into the 
template scope.</p>

<h3>Comments</h3>

<p>You can insert comments into an HTML file by starting a line with
the sequence <span class='wf_code'>%#</span>. 
The <span class='wf_code'>%</span> indicates this is Tcl line, and
the <span class='wf_code'>#</span> is
the Tcl comment character.</p>
% # TBD - escaping special HTML characters
% # TBD - block Tcl code using %(%)

<p><sup>1</sup> This command is based on an enhanced form of
the <span class='wf_code'>substify</span> command from
the <a href="http://wiki.tcl.tk/18455">Tcl wiki</a>.</p>
