<p>When Woof! is installed, it installs a file
<span class="ug-filename">app/controllers/views/_layout.wtf</span>
that contains a page layout. Furthermore, it copies this file to 
<span class="ug-filename">app/controllers/views/layout.wtf</span>
which makes it the default page layout for all controllers that do not
themselves specialize the layout as described in
[my _chapter_link page_layout].</p>

<p>An application may of course replace this default layout in
<span class="ug-filename">app/controllers/views/layout.wtf</span> with
its own version. However, the default layout described here
provides sufficient flexibility for many applications.</p>

<p>The default Woof! page layout 
  divides a Web page into five page sections:</p>
<ul>
  <li>The <span class='ug-code'>header</span> section which contains
  content, such as a banner, that appears at the top of a page.
  <li>The <span class='ug-code'>footer</span> section
  contains content that is to appear at the bottom of a page.
  <li>The <span class='ug-code'>main</span> section
  contains the primary content of the main page.
  <li>The <span class='ug-code'>sidebar</span>, which may contain elements
    such as navigation links that appear alongside the main content.
    The default layout positions this on the left of the
    <span class='ug-code'>main</span> section.
  <li>The <span class='ug-code'>supplement</span> section contains
    content related to the main content, such as additional related
    links, advertising.
    The default layout positions this on the right of the
    <span class='ug-code'>main</span> section.
</ul>

<p><strong>All sections in the default layout are optional</strong>. Sections
  that are empty are omitted from the generated Web page with the
  exception of the main section which is always generated (as an empty section
  if no content is defined for it). Section
  content may be generated either through template files or directly
  created by application code.</p>

<p>Woof! uses the [my _chapter_link purecss "Pure CSS"] stylesheets to provide
  the underlying styles infrastructure for the default layout. The appropriate
  style classes are chosen based on which page sections being present.</p>

<h3>Customizing the default layout sections</h3>
<p>
The default layout sections can be customized to some degree through
the corresponding key of the same name in the
[my _chapter_link pagevar_object "<code>pagevar</code>"]. The value
should be a dictionary containing the settings for the section. For example,
</p>
[my _code_sample {
 pagevar set sidebar {tag aside cssclasses {+ appcss pure-skin-app}}
}]
<p>
  The above specifies that the <code>aside</code> tag be used for the
  <code>sidebar</code> section and the specified CSS classes be added to 
  it.
<p>
  The <code>pagevar</code> element as well as individual settings are all
  optional and defaults are used for missing values. The table below shows
  the settings and defaults.
</p>
%(
  set table_def {
      {
          <code>tag</code>
          {The HTML tag to use wrap the section. The <code>header</code>,
              <code>footer</code>, <code>main</code>, <code>sidebar</code>
              and <code>supplement</code> default to the
              <code>header</code>, <code>footer</code>, <code>main</code>,
              <code>nav</code> and <code>aside</code> HTML tags respectively.}
      }
      {
          <code>cssclasses</code>
          {
              By default, the tags used to wrap the page sections
              <code>header</code>,
              <code>footer</code>, <code>main</code>, <code>sidebar</code>
              and <code>supplement</code> are added to the CSS classes
              <code>wf_header</code>, <code>wf_footer</code>,
              <code>wf_main</code>, <code>wf_sidebar</code> and
              <code>wf_supplement</code> respectively. If the
              dictionary contains <code>cssclasses</code>, its value
              should be a list (possibly empty) of CSS class names that will
              replace the default class. As a special case, if the first
              element of this list is <code>+</code>, the remaining list
              elements will
              be added to the default instead of replacing it.
          }
      }
  }
%)
[woof::pure::table $table_def -heading {Setting Description} -raw 1 -stripes 1]

<p>
  The CSS classes have a default style defined in the file 
  <span class='wf_filename'>public/stylesheets/_layout.css</span> that is 
  always loaded by the default layout. The
  application can override or modify these classes
  as desired in a separate CSS file and arrange for it to be loaded
  as described in [my _chapter_link using_stylesheets].
</p>


<h3>Default layout boilerplate</h3>

<p>In addition to laying out the page, the default layout template
  also includes some common HTML boilerplate such as the page title.
  The layout template fetches this boilerplate from the
  [my _chapter_link pagevar pagevar] object. Applications
  can set the appropriate values in <code>pagevar</code> any time
  before the page is rendered. See [my _chapter_link pagevar]
  for the various properties that can be set.
</p>

